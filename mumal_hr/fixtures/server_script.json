[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:05.951388",
  "module": "Mumal HR",
  "name": "Not Allowed to create Job Opening on InActive Staffing Plan",
  "reference_doctype": "Job Opening",
  "script": "if doc.staffing_plan:\n    staffing_plan = frappe.get_doc('Staffing Plan', doc.staffing_plan)\n    if staffing_plan.custom_enable == 0:\n        frappe.throw(f'{doc.staffing_plan} Staffing Plan is closed.')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:05.987750",
  "module": "Mumal HR",
  "name": "Not allowed to Create/Update Job Offer against 'Closed' Job Opening",
  "reference_doctype": "Job Offer",
  "script": "if doc.custom__job_opening_:\n    job_opening_doc = frappe.get_doc('Job Opening', doc.custom__job_opening_)\n    if job_opening_doc.status == 'Closed':\n        frappe.throw(f'{doc.custom__job_opening_} Job Opening is closed.')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.092133",
  "module": "Mumal HR",
  "name": "Auto update job opening status as 'Closed' based on the hired vacancy",
  "reference_doctype": "Job Offer",
  "script": "if doc.status == 'Accepted':\n    opening = doc.custom_job_opening\n    \n    # job_requisition = frappe.db.get_value('Job Opening', opening, 'job_requisition')\n    \n    # if job_requisition:\n    \n    #     vacancy = frappe.db.get_value('Job Opening', opening, 'vacancies')\n    job_requisition = frappe.db.get_value('Job Opening', opening, 'job_requisition')\n    vacancy_field = 'vacancies' if job_requisition else 'planned_vacancies'\n    \n    vacancy = frappe.db.get_value('Job Opening', opening, vacancy_field)\n    staffing_plan = frappe.db.get_value('Job Opening', opening, 'staffing_plan')\n    \n    hired_vacancy = frappe.db.count('Job Offer', {'docstatus':1, 'status': 'Accepted', 'custom_job_opening': opening})\n        \n    frappe.db.set_value('Job Opening', opening, 'custom_hired_vacancy', hired_vacancy)\n        \n    if vacancy==hired_vacancy:\n            \n        # closing_date = frappe.utils.today()\n        frappe.db.set_value('Job Opening', opening, 'status', 'Closed')\n        frappe.db.set_value('Job Opening', opening, 'publish', 0)\n        # frappe.db.set_value('Job Opening', opening, 'closed_on', closing_date)\n            \n        \n        \n    # Check status of job opening of particular staffing plan\n    data = frappe.db.get_list('Job Opening',\n    filters={\n        'staffing_plan': staffing_plan,\n    },\n    fields=['name', 'status'], as_list=True)\n    \n    # Initialize a flag to track if all job openings are closed\n    all_closed = True\n        \n    # Iterate through the job openings\n    for x in data:\n        name = x[0]\n        status = x[1]\n            \n           \n            \n        # If any job opening is not closed, set the flag to False\n        if status != 'Closed':\n            all_closed = False\n        \n    # If all job openings are closed, print a message\n    if all_closed:\n            \n        frappe.db.set_value('Staffing Plan', staffing_plan, 'custom_enable', 0)\n    else:\n        pass\n            # frappe.msgprint(\"Not all job openings for the staffing plan are closed.\")\n            \n    # else: \n    #     vacancy = frappe.db.get_value('Job Opening', opening, 'planned_vacancies')\n    #     staffing_plan = frappe.db.get_value('Job Opening', opening, 'staffing_plan')\n        \n    #     hired_vacancy = frappe.db.count('Job Offer', {'docstatus':1, 'status': 'Accepted', 'custom__job_opening_': opening})\n        \n    #     frappe.db.set_value('Job Opening', opening, 'custom_hired_vacancy', hired_vacancy)\n        \n    #     if vacancy==hired_vacancy:\n            \n    #         # closing_date = frappe.utils.today()\n    #         frappe.db.set_value('Job Opening', opening, 'status', 'Closed')\n    #         # frappe.db.set_value('Job Opening', opening, 'closed_on', closing_date)\n            \n        \n        \n    #     # Check status of job opening of particular staffing plan\n    #     data = frappe.db.get_list('Job Opening',\n    #     filters={\n    #         'staffing_plan': staffing_plan,\n    #     },\n    #     fields=['name', 'status'], as_list=True)\n    \n    #     # Initialize a flag to track if all job openings are closed\n    #     all_closed = True\n        \n    #     # Iterate through the job openings\n    #     for x in data:\n    #         name = x[0]\n    #         status = x[1]\n            \n           \n            \n    #         # If any job opening is not closed, set the flag to False\n    #         if status != 'Closed':\n    #             all_closed = False\n        \n    #     # If all job openings are closed, print a message\n    #     if all_closed:\n            \n    #         frappe.db.set_value('Staffing Plan', staffing_plan, 'custom_enable', 0)\n    #     else:\n    #         pass\n\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.080454",
  "module": "Mumal HR",
  "name": "Update Hired vacancy in Job Opening when job offer is cancelled",
  "reference_doctype": "Job Offer",
  "script": "general_round = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"General Round\", \"docstatus\": [\"!=\", 2]})\nthird_interview = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"3rd Interview Round\", \"docstatus\": [\"!=\", 2]})\nsecond_interview = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"2nd Interview Round\", \"docstatus\": [\"!=\", 2]})\nfirst_interview = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"1st Interview Round\", \"docstatus\": [\"!=\", 2]})\n\nif general_round:\n    prev_status = frappe.db.get_value('Interview',general_round,['status'])\n    prev_round = frappe.db.get_value('Interview',general_round,['interview_round'])\n    prev_status_string = f\"{prev_round} - {prev_status}\"\n    \n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', prev_status_string)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', prev_round)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', prev_status)\n    \nelif third_interview:\n    prev_status = frappe.db.get_value('Interview',third_interview,['status'])\n    prev_round = frappe.db.get_value('Interview',third_interview,['interview_round'])\n    prev_status_string = f\"{prev_round} - {prev_status}\"\n    \n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', prev_status_string)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', prev_round)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', prev_status)\n    \nelif second_interview:\n    prev_status = frappe.db.get_value('Interview',second_interview,['status'])\n    prev_round = frappe.db.get_value('Interview',second_interview,['interview_round'])\n    prev_status_string = f\"{prev_round} - {prev_status}\"\n    \n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', prev_status_string)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', prev_round)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', prev_status)\n\nelif first_interview:\n    prev_status = frappe.db.get_value('Interview',first_interview,['status'])\n    prev_round = frappe.db.get_value('Interview',first_interview,['interview_round'])\n    prev_status_string = f\"{prev_round} - {prev_status}\"\n    \n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', prev_status_string)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', prev_round)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', prev_status) \n\nelse:\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n\n\nif doc.status=='Accepted':\n    opening = doc.custom_job_opening\n    vacancy = frappe.db.get_value('Job Opening', opening, 'custom_hired_vacancy')\n    plan = frappe.db.get_value('Job Opening', opening, 'staffing_plan')\n    \n    new_vacancy = int(vacancy)-1\n    \n    frappe.db.set_value('Job Opening', opening, 'custom_hired_vacancy', new_vacancy)\n    frappe.db.set_value('Job Opening', opening, 'status', 'Open')\n    \n    frappe.db.set_value('Staffing Plan', plan, 'custom_enable', 1)\n    \n    \n\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:05.997661",
  "module": "Mumal HR",
  "name": "Not allowed to Create/Update interview against 'Closed' Job Opening",
  "reference_doctype": "Interview",
  "script": "if doc.job_opening:\n    job_opening_doc = frappe.get_doc('Job Opening', doc.job_opening)\n    if job_opening_doc.status == 'Closed':\n        frappe.throw(f'{doc.job_opening} Job Opening is closed.')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.007154",
  "module": "Mumal HR",
  "name": "set applicant status based on job offer",
  "reference_doctype": "Job Offer",
  "script": "if doc.status == \"Awaiting Response\":\n    frappe.throw(\"Only Accepted or Rejected job offer can be submitted.\");",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.015433",
  "module": "Mumal HR",
  "name": "Update Job applicant status When interview is saved",
  "reference_doctype": "Interview",
  "script": "status = doc.status\ninterview_round = doc.interview_round\njob_applicant = doc.job_applicant\n\n\nif status in ['Pending', 'Under Review', 'Not Appeared']:\n    \n    status_string = f\"{interview_round} - {status}\"\n        \n    frappe.db.set_value('Job Applicant', job_applicant, 'status', status_string)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', interview_round)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', status)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.024189",
  "module": "Mumal HR",
  "name": "Update Job applicant status When interview is submitted",
  "reference_doctype": "Interview",
  "script": "status = doc.status\ninterview_round = doc.interview_round\njob_applicant = doc.job_applicant\n\n\nif status in ['Cleared', 'Rejected']:\n    \n    status_string = f\"{interview_round} - {status}\"\n    \n    frappe.db.set_value('Job Applicant', job_applicant, 'status', status_string)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', interview_round)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', status)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.044156",
  "module": "Mumal HR",
  "name": "Change job applicant status when interview is cancelled",
  "reference_doctype": "Interview",
  "script": "if doc.custom_round_type in ['General Round', '1st Interview Round']:\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n    \nelif doc.custom_round_type==\"3rd Interview Round\":\n    second_interview = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"2nd Interview Round\", \"docstatus\": [\"!=\", 2]})\n    \n    if second_interview:\n        job_applicant = frappe.db.get_value('Interview',second_interview,['job_applicant'])\n        prev_status = frappe.db.get_value('Interview',second_interview,['status'])\n        prev_round = frappe.db.get_value('Interview',second_interview,['interview_round'])\n        \n        prev_status_string = f\"{prev_round} - {prev_status}\"\n        \n        frappe.db.set_value('Job Applicant', job_applicant, 'status', prev_status_string)\n        frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', prev_round)\n        frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', prev_status)\n    else:\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n        \n        \nelif doc.custom_round_type==\"2nd Interview Round\":\n    first_interiew = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"1st Interview Round\", \"docstatus\": [\"!=\", 2]})\n    \n    if first_interiew:\n        job_applicant = frappe.db.get_value('Interview',first_interiew,['job_applicant'])\n        prev_status = frappe.db.get_value('Interview',first_interiew,['status'])\n        prev_round = frappe.db.get_value('Interview',first_interiew,['interview_round'])\n        \n        prev_status_string = f\"{prev_round} - {prev_status}\"\n        \n        frappe.db.set_value('Job Applicant', job_applicant, 'status', prev_status_string)\n        frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', prev_round)\n        frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', prev_status)\n    else:\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n        \n    \n\n\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Delete",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.033225",
  "module": "Mumal HR",
  "name": "Change Job Applicant status when interview is deleted",
  "reference_doctype": "Interview",
  "script": "if doc.docstatus!=2:\n    \n    if doc.custom_round_type in ['General Round', '1st Interview Round']:\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n        \n    elif doc.custom_round_type==\"3rd Interview Round\":\n        second_interview = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"2nd Interview Round\", \"docstatus\": [\"!=\", 2]})\n        \n        if second_interview:\n            job_applicant = frappe.db.get_value('Interview',second_interview,['job_applicant'])\n            prev_status = frappe.db.get_value('Interview',second_interview,['status'])\n            prev_round = frappe.db.get_value('Interview',second_interview,['interview_round'])\n            \n            prev_status_string = f\"{prev_round} - {prev_status}\"\n            \n            frappe.db.set_value('Job Applicant', job_applicant, 'status', prev_status_string)\n            frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', prev_round)\n            frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', prev_status)\n        else:\n            frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n            frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n            \n            \n    elif doc.custom_round_type==\"2nd Interview Round\":\n        first_interiew = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"custom_round_type\":\"1st Interview Round\", \"docstatus\": [\"!=\", 2]})\n        \n        if first_interiew:\n            job_applicant = frappe.db.get_value('Interview',first_interiew,['job_applicant'])\n            prev_status = frappe.db.get_value('Interview',first_interiew,['status'])\n            prev_round = frappe.db.get_value('Interview',first_interiew,['interview_round'])\n            \n            prev_status_string = f\"{prev_round} - {prev_status}\"\n            \n            frappe.db.set_value('Job Applicant', job_applicant, 'status', prev_status_string)\n            frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', prev_round)\n            frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', prev_status) \n        else:\n            frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', \"Open\")\n            frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', \"Open\")\n            \n        \n\n\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.054484",
  "module": "Mumal HR",
  "name": "Do not allow to create job offer against closed - job opening",
  "reference_doctype": "Job Offer",
  "script": "opening = doc.custom_job_opening\n\nopening_status = frappe.db.get_value('Job Opening', opening, 'status')\n\nif opening_status=='Closed':\n    opening_link = frappe.utils.get_link_to_form(\"Job Opening\", opening)\n    error_message = 'Job Opening is already closed: ' + opening_link\n    frappe.throw(error_message)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.071278",
  "module": "Mumal HR",
  "name": "Job Applicant status update on job offer",
  "reference_doctype": "Job Offer",
  "script": "if doc.status == \"Accepted\" or doc.status == \"Rejected\":\n    \n    offer_status = f\"Job Offer - {doc.status}\"\n    \n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', doc.doctype)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', doc.status)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', offer_status)\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-08-05 13:20:06.063184",
  "module": "Mumal HR",
  "name": "Update job applicant status when job offer is saved",
  "reference_doctype": "Job Offer",
  "script": "if doc.status=='Awaiting Response':\n    offer_status = f\"{doc.doctype} - {doc.status}\"\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', offer_status)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', doc.doctype)\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', doc.status)",
  "script_type": "DocType Event"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-08-13 11:22:15.459482",
  "module": "Mumal HR",
  "name": "Relieving date validation on Exit Questionnaire",
  "reference_doctype": "Exit Questionnaire",
  "script": "emp = doc.employee\nemp_nm = doc.employee_name\n\nrelieving_date = frappe.db.get_value('Employee', emp, 'relieving_date')\n\nif emp and not relieving_date:\n    frappe.throw(f\"Please set relieving date in Employee: {emp} - {emp_nm}\")",
  "script_type": "DocType Event"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-08-13 11:41:43.984430",
  "module": "Mumal HR",
  "name": "Update exit questionnaire id in exit interview",
  "reference_doctype": "Exit Questionnaire",
  "script": "exit_interview = frappe.db.get_value('Exit Interview', {'employee': doc.employee}, 'name')\n\nif exit_interview:\n    frappe.db.set_value('Exit Interview', exit_interview, 'reference_document_name', doc.name)",
  "script_type": "DocType Event"
 }
]